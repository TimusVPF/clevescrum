CREATE TABLE task_cards (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    category_id INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    description TEXT DEFAULT NULL,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_cards_category FOREIGN KEY (category_id) REFERENCES board_categories (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE tasks (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    card_id INT NOT NULL,
    task VARCHAR(100) NOT NULL,
    finished_at TIMESTAMPTZ DEFAULT NULL,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_tasks_card_id FOREIGN KEY (card_id) REFERENCES task_cards (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE card_participants (
    card_id INT NOT NULL,
    user_id INT NOT NULL,

    CONSTRAINT pk_card_participants_unique PRIMARY KEY (card_id, user_id),
    CONSTRAINT fk_cp_card_id FOREIGN KEY (card_id) REFERENCES task_cards (id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_cp_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE card_comments (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    card_id INT NOT NULL,
    comment TEXT,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_card_comments_card_id FOREIGN KEY (card_id) REFERENCES task_cards (id) ON UPDATE CASCADE ON DELETE CASCADE
);